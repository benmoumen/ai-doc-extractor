services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-doc-backend
    ports:
      - "8000:8000"
    environment:
      # API Keys - Set these in .env file
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      # FastAPI settings
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      # Mount data directory for SQLite database persistence
      - ./data:/app/data
    networks:
      - ai-doc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-doc-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - ai-doc-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000/api/health', (r) => {r.statusCode === 200 ? process.exit(0) : process.exit(1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  ai-doc-network:
    driver: bridge
